package mysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/access") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private StudentRepository studentRepository;

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public @ResponseBody
    boolean addNewStudent(@RequestParam String first_name,
                         @RequestParam String last_name,
                         @RequestParam String email,
                         @RequestParam String course_ID,
                         @RequestParam String Student_ID,
                         @RequestParam String Android_ID,
                         @RequestParam String IMEI) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        Student_table n = new Student_table();
        StudentPK key = new StudentPK();
        key.setAndroid_ID(Android_ID);
        key.setStudent_ID(Student_ID);
        key.setIMEI(IMEI);
        n.setKey(key);
        n.setFirst_name(first_name);
        n.setLast_name(last_name);
        n.setEmail(email);
        n.setCourse_ID(course_ID);

        studentRepository.save(n);
        return true;
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Student_table> getAllStudents() {
        // This returns a JSON or XML with the users
        return studentRepository.findAll();
    }
}